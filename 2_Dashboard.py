import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import plotly.express as px
import numpy as np

# Configurar la p치gina
st.set_page_config(
    page_title="Dashboard de Educaci칩n B치sica", 
    layout="wide",
    page_icon="游늵"
)

# Cargar la base de datos
@st.cache_data
def load_data():
    return pd.read_csv("educacion_basica.csv")

df = load_data()

# T칤tulo y descripci칩n
st.title("游늵 Dashboard de Educaci칩n B치sica en Colombia")
st.markdown("""
Visualizaci칩n interactiva de los datos de educaci칩n b치sica por departamento y categor칤a.
""")

# Dividir en columnas
col1, col2 = st.columns([1, 2])

with col1:
    # Filtros interactivos
    st.subheader("Filtros")
    departamentos = st.multiselect(
        "Seleccione departamentos",
        options=df['Departamento'].unique(),
        default=df['Departamento'].unique()[:3]
    )
    
    categorias = st.multiselect(
        "Seleccione categor칤as",
        options=df['Categor칤a'].unique(),
        default=df['Categor칤a'].unique()
    )
    
    rango_valores = st.slider(
        "Rango de valores",
        min_value=float(df['Valor'].min()),
        max_value=float(df['Valor'].max()),
        value=(float(df['Valor'].min()), float(df['Valor'].max()))
    )

# Aplicar filtros
df_filtrado = df[
    (df['Departamento'].isin(departamentos)) & 
    (df['Categor칤a'].isin(categorias)) &
    (df['Valor'].between(rango_valores[0], rango_valores[1]))
]

with col2:
    # Mostrar estad칤sticas b치sicas
    st.subheader("Resumen Estad칤stico")
    st.write(f"游늷 Total de registros: {len(df_filtrado)}")
    st.write(f"游늷 Valor promedio: {df_filtrado['Valor'].mean():.2f}")
    st.write(f"游늷 Valor m치ximo: {df_filtrado['Valor'].max():.2f}")
    st.write(f"游늷 Valor m칤nimo: {df_filtrado['Valor'].min():.2f}")

# Dividir en pesta침as
tab1, tab2, tab3 = st.tabs(["游늳 Gr치ficos", "游듺 Datos", "游늵 Comparativas"])

with tab1:
    st.subheader("Distribuci칩n por Categor칤a")
    fig1 = px.histogram(
        df_filtrado, 
        x='Categor칤a',
        color='Categor칤a',
        title='Distribuci칩n de registros por categor칤a'
    )
    st.plotly_chart(fig1, use_container_width=True)
    
    st.subheader("Valores por Departamento")
    fig2 = px.box(
        df_filtrado,
        x='Departamento',
        y='Valor',
        color='Categor칤a',
        title='Distribuci칩n de valores por departamento'
    )
    st.plotly_chart(fig2, use_container_width=True)

with tab2:
    st.subheader("Datos Filtrados")
    st.dataframe(df_filtrado.sort_values('Valor', ascending=False))
    
    # Opci칩n para descargar datos filtrados
    st.download_button(
        label="Descargar datos filtrados como CSV",
        data=df_filtrado.to_csv(index=False).encode('utf-8'),
        file_name='educacion_basica_filtrado.csv',
        mime='text/csv'
    )

with tab3:
    st.subheader("Comparativa Departamental")
    
    # Seleccionar m칠trica para comparaci칩n
    metrica = st.radio(
        "Seleccione m칠trica para comparar:",
        options=['Promedio', 'Suma', 'Conteo'],
        horizontal=True
    )
    
    # Calcular seg칰n m칠trica seleccionada
    if metrica == 'Promedio':
        data = df_filtrado.groupby(['Departamento', 'Categor칤a'])['Valor'].mean().reset_index()
    elif metrica == 'Suma':
        data = df_filtrado.groupby(['Departamento', 'Categor칤a'])['Valor'].sum().reset_index()
    else:
        data = df_filtrado.groupby(['Departamento', 'Categor칤a']).size().reset_index(name='Conteo')
    
    # Gr치fico de comparaci칩n
    fig4 = px.bar(
        data,
        x='Departamento',
        y='Valor' if metrica != 'Conteo' else 'Conteo',
        color='Categor칤a',
        barmode='group',
        title=f'Comparaci칩n por {metrica.lower()} entre departamentos'
    )
    st.plotly_chart(fig4, use_container_width=True)

# Notas al pie
st.markdown("---")
st.caption("Dashboard desarrollado con Streamlit - Datos de educaci칩n b치sica en Colombia")